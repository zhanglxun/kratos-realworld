// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: realworld/v1/content.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//类别的请求参数
type CategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatePare int32 `protobuf:"varint,1,opt,name=catePare,proto3" json:"catePare,omitempty"`
}

func (x *CategoryRequest) Reset() {
	*x = CategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryRequest) ProtoMessage() {}

func (x *CategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryRequest.ProtoReflect.Descriptor instead.
func (*CategoryRequest) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryRequest) GetCatePare() int32 {
	if x != nil {
		return x.CatePare
	}
	return 0
}

type CategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ParentId     int64  `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	CategoryId   int32  `protobuf:"varint,3,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`
	CategoryName string `protobuf:"bytes,4,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	Status       int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *CategoryReply) Reset() {
	*x = CategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryReply) ProtoMessage() {}

func (x *CategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryReply.ProtoReflect.Descriptor instead.
func (*CategoryReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{3}
}

func (x *CategoryReply) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CategoryReply) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CategoryReply) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CategoryReply) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *CategoryReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MultipleCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*MultipleCategoryReply_Categories `protobuf:"bytes,1,rep,name=category,proto3" json:"category,omitempty"`
}

func (x *MultipleCategoryReply) Reset() {
	*x = MultipleCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleCategoryReply) ProtoMessage() {}

func (x *MultipleCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleCategoryReply.ProtoReflect.Descriptor instead.
func (*MultipleCategoryReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{4}
}

func (x *MultipleCategoryReply) GetCategory() []*MultipleCategoryReply_Categories {
	if x != nil {
		return x.Category
	}
	return nil
}

// website 常规操作
type WebsiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32 `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	Type     int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *WebsiteRequest) Reset() {
	*x = WebsiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteRequest) ProtoMessage() {}

func (x *WebsiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteRequest.ProtoReflect.Descriptor instead.
func (*WebsiteRequest) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{5}
}

func (x *WebsiteRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *WebsiteRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

//公共的提取出来
type WebSite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    int32  `protobuf:"varint,1,opt,name=category,proto3" json:"category,omitempty"`
	WebsiteName string `protobuf:"bytes,2,opt,name=websiteName,proto3" json:"websiteName,omitempty"`
	WebsiteIcon string `protobuf:"bytes,3,opt,name=websiteIcon,proto3" json:"websiteIcon,omitempty"`
	WebsiteUrl  string `protobuf:"bytes,4,opt,name=websiteUrl,proto3" json:"websiteUrl,omitempty"`
	Summary     string `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *WebSite) Reset() {
	*x = WebSite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSite) ProtoMessage() {}

func (x *WebSite) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSite.ProtoReflect.Descriptor instead.
func (*WebSite) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{6}
}

func (x *WebSite) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *WebSite) GetWebsiteName() string {
	if x != nil {
		return x.WebsiteName
	}
	return ""
}

func (x *WebSite) GetWebsiteIcon() string {
	if x != nil {
		return x.WebsiteIcon
	}
	return ""
}

func (x *WebSite) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *WebSite) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type WebsiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName *WebsiteReply_CategoryName `protobuf:"bytes,1,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
	Website      []*WebSite                 `protobuf:"bytes,2,rep,name=website,proto3" json:"website,omitempty"`
}

func (x *WebsiteReply) Reset() {
	*x = WebsiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteReply) ProtoMessage() {}

func (x *WebsiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteReply.ProtoReflect.Descriptor instead.
func (*WebsiteReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{7}
}

func (x *WebsiteReply) GetCategoryName() *WebsiteReply_CategoryName {
	if x != nil {
		return x.CategoryName
	}
	return nil
}

func (x *WebsiteReply) GetWebsite() []*WebSite {
	if x != nil {
		return x.Website
	}
	return nil
}

//首页的请求
type WebHomeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatePare int32 `protobuf:"varint,1,opt,name=catePare,proto3" json:"catePare,omitempty"`
}

func (x *WebHomeRequest) Reset() {
	*x = WebHomeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebHomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebHomeRequest) ProtoMessage() {}

func (x *WebHomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebHomeRequest.ProtoReflect.Descriptor instead.
func (*WebHomeRequest) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{8}
}

func (x *WebHomeRequest) GetCatePare() int32 {
	if x != nil {
		return x.CatePare
	}
	return 0
}

type MultipleWebsiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebsiteReply []*MultipleWebsiteReply_WebsiteReply `protobuf:"bytes,1,rep,name=websiteReply,proto3" json:"websiteReply,omitempty"`
}

func (x *MultipleWebsiteReply) Reset() {
	*x = MultipleWebsiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleWebsiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleWebsiteReply) ProtoMessage() {}

func (x *MultipleWebsiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleWebsiteReply.ProtoReflect.Descriptor instead.
func (*MultipleWebsiteReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{9}
}

func (x *MultipleWebsiteReply) GetWebsiteReply() []*MultipleWebsiteReply_WebsiteReply {
	if x != nil {
		return x.WebsiteReply
	}
	return nil
}

//文章
type ArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage string `protobuf:"bytes,1,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	PageNumber  string `protobuf:"bytes,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *ArticleRequest) Reset() {
	*x = ArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleRequest) ProtoMessage() {}

func (x *ArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleRequest.ProtoReflect.Descriptor instead.
func (*ArticleRequest) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleRequest) GetCurrentPage() string {
	if x != nil {
		return x.CurrentPage
	}
	return ""
}

func (x *ArticleRequest) GetPageNumber() string {
	if x != nil {
		return x.PageNumber
	}
	return ""
}

type ArticleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SortId      int32  `protobuf:"varint,2,opt,name=sortId,proto3" json:"sortId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CategoryId  int32  `protobuf:"varint,4,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Recommend   string `protobuf:"bytes,5,opt,name=recommend,proto3" json:"recommend,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ContentBody string `protobuf:"bytes,7,opt,name=contentBody,proto3" json:"contentBody,omitempty"`
	ImageUrl    string `protobuf:"bytes,8,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Status      int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	ClickCount  int32  `protobuf:"varint,10,opt,name=clickCount,proto3" json:"clickCount,omitempty"`
	LikeCount   int32  `protobuf:"varint,11,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
}

func (x *ArticleReply) Reset() {
	*x = ArticleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleReply) ProtoMessage() {}

func (x *ArticleReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleReply.ProtoReflect.Descriptor instead.
func (*ArticleReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{11}
}

func (x *ArticleReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleReply) GetSortId() int32 {
	if x != nil {
		return x.SortId
	}
	return 0
}

func (x *ArticleReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArticleReply) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ArticleReply) GetRecommend() string {
	if x != nil {
		return x.Recommend
	}
	return ""
}

func (x *ArticleReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ArticleReply) GetContentBody() string {
	if x != nil {
		return x.ContentBody
	}
	return ""
}

func (x *ArticleReply) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ArticleReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArticleReply) GetClickCount() int32 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *ArticleReply) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

type MultipleCategoryReply_Categories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ParentId     int64  `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	CategoryId   int32  `protobuf:"varint,3,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`
	CategoryName string `protobuf:"bytes,4,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	Status       int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MultipleCategoryReply_Categories) Reset() {
	*x = MultipleCategoryReply_Categories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleCategoryReply_Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleCategoryReply_Categories) ProtoMessage() {}

func (x *MultipleCategoryReply_Categories) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleCategoryReply_Categories.ProtoReflect.Descriptor instead.
func (*MultipleCategoryReply_Categories) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MultipleCategoryReply_Categories) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *MultipleCategoryReply_Categories) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MultipleCategoryReply_Categories) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *MultipleCategoryReply_Categories) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *MultipleCategoryReply_Categories) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type WebsiteReply_CategoryName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName string `protobuf:"bytes,1,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
}

func (x *WebsiteReply_CategoryName) Reset() {
	*x = WebsiteReply_CategoryName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteReply_CategoryName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteReply_CategoryName) ProtoMessage() {}

func (x *WebsiteReply_CategoryName) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteReply_CategoryName.ProtoReflect.Descriptor instead.
func (*WebsiteReply_CategoryName) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{7, 0}
}

func (x *WebsiteReply_CategoryName) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type MultipleWebsiteReply_WebsiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName string     `protobuf:"bytes,1,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
	Website      []*WebSite `protobuf:"bytes,2,rep,name=website,proto3" json:"website,omitempty"`
}

func (x *MultipleWebsiteReply_WebsiteReply) Reset() {
	*x = MultipleWebsiteReply_WebsiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realworld_v1_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleWebsiteReply_WebsiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleWebsiteReply_WebsiteReply) ProtoMessage() {}

func (x *MultipleWebsiteReply_WebsiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_realworld_v1_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleWebsiteReply_WebsiteReply.ProtoReflect.Descriptor instead.
func (*MultipleWebsiteReply_WebsiteReply) Descriptor() ([]byte, []int) {
	return file_realworld_v1_content_proto_rawDescGZIP(), []int{9, 0}
}

func (x *MultipleWebsiteReply_WebsiteReply) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *MultipleWebsiteReply_WebsiteReply) GetWebsite() []*WebSite {
	if x != nil {
		return x.Website
	}
	return nil
}

var File_realworld_v1_content_proto protoreflect.FileDescriptor

var file_realworld_v1_content_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x65, 0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72, 0x65,
	0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a,
	0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb,
	0x01, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x65, 0x61,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x94, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x0e,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa3,
	0x01, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x65,
	0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x1a, 0x32, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x57, 0x65, 0x62,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x14, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x54, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x57,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x57, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x64, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65,
	0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x53,
	0x69, 0x74, 0x65, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x22, 0x52, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0xbf, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x12, 0x1b, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x72, 0x65, 0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x12, 0x67, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x2f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x0b,
	0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x72, 0x65,
	0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x48,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x61,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x74, 0x0a,
	0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x72, 0x65, 0x61, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x27, 0x5a, 0x25, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x72, 0x65,
	0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x61, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_realworld_v1_content_proto_rawDescOnce sync.Once
	file_realworld_v1_content_proto_rawDescData = file_realworld_v1_content_proto_rawDesc
)

func file_realworld_v1_content_proto_rawDescGZIP() []byte {
	file_realworld_v1_content_proto_rawDescOnce.Do(func() {
		file_realworld_v1_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_realworld_v1_content_proto_rawDescData)
	})
	return file_realworld_v1_content_proto_rawDescData
}

var file_realworld_v1_content_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_realworld_v1_content_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),                      // 0: realoworld.v1.HelloRequest
	(*HelloReply)(nil),                        // 1: realoworld.v1.HelloReply
	(*CategoryRequest)(nil),                   // 2: realoworld.v1.CategoryRequest
	(*CategoryReply)(nil),                     // 3: realoworld.v1.CategoryReply
	(*MultipleCategoryReply)(nil),             // 4: realoworld.v1.MultipleCategoryReply
	(*WebsiteRequest)(nil),                    // 5: realoworld.v1.WebsiteRequest
	(*WebSite)(nil),                           // 6: realoworld.v1.WebSite
	(*WebsiteReply)(nil),                      // 7: realoworld.v1.WebsiteReply
	(*WebHomeRequest)(nil),                    // 8: realoworld.v1.WebHomeRequest
	(*MultipleWebsiteReply)(nil),              // 9: realoworld.v1.MultipleWebsiteReply
	(*ArticleRequest)(nil),                    // 10: realoworld.v1.ArticleRequest
	(*ArticleReply)(nil),                      // 11: realoworld.v1.ArticleReply
	(*MultipleCategoryReply_Categories)(nil),  // 12: realoworld.v1.MultipleCategoryReply.Categories
	(*WebsiteReply_CategoryName)(nil),         // 13: realoworld.v1.WebsiteReply.CategoryName
	(*MultipleWebsiteReply_WebsiteReply)(nil), // 14: realoworld.v1.MultipleWebsiteReply.WebsiteReply
}
var file_realworld_v1_content_proto_depIdxs = []int32{
	12, // 0: realoworld.v1.MultipleCategoryReply.category:type_name -> realoworld.v1.MultipleCategoryReply.Categories
	13, // 1: realoworld.v1.WebsiteReply.categoryName:type_name -> realoworld.v1.WebsiteReply.CategoryName
	6,  // 2: realoworld.v1.WebsiteReply.website:type_name -> realoworld.v1.WebSite
	14, // 3: realoworld.v1.MultipleWebsiteReply.websiteReply:type_name -> realoworld.v1.MultipleWebsiteReply.WebsiteReply
	6,  // 4: realoworld.v1.MultipleWebsiteReply.WebsiteReply.website:type_name -> realoworld.v1.WebSite
	0,  // 5: realoworld.v1.ContentService.SayHello:input_type -> realoworld.v1.HelloRequest
	5,  // 6: realoworld.v1.ContentService.WebSiteList:input_type -> realoworld.v1.WebsiteRequest
	8,  // 7: realoworld.v1.ContentService.WebSiteHome:input_type -> realoworld.v1.WebHomeRequest
	2,  // 8: realoworld.v1.ContentService.CategoryList:input_type -> realoworld.v1.CategoryRequest
	1,  // 9: realoworld.v1.ContentService.SayHello:output_type -> realoworld.v1.HelloReply
	7,  // 10: realoworld.v1.ContentService.WebSiteList:output_type -> realoworld.v1.WebsiteReply
	9,  // 11: realoworld.v1.ContentService.WebSiteHome:output_type -> realoworld.v1.MultipleWebsiteReply
	4,  // 12: realoworld.v1.ContentService.CategoryList:output_type -> realoworld.v1.MultipleCategoryReply
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_realworld_v1_content_proto_init() }
func file_realworld_v1_content_proto_init() {
	if File_realworld_v1_content_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_realworld_v1_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebHomeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleWebsiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleCategoryReply_Categories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteReply_CategoryName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realworld_v1_content_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleWebsiteReply_WebsiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_realworld_v1_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_realworld_v1_content_proto_goTypes,
		DependencyIndexes: file_realworld_v1_content_proto_depIdxs,
		MessageInfos:      file_realworld_v1_content_proto_msgTypes,
	}.Build()
	File_realworld_v1_content_proto = out.File
	file_realworld_v1_content_proto_rawDesc = nil
	file_realworld_v1_content_proto_goTypes = nil
	file_realworld_v1_content_proto_depIdxs = nil
}
